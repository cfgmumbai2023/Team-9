{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh\\\\Desktop\\\\carsgo\\\\src\\\\components\\\\Geosales.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport './header.css';\nimport { Bar, Doughnut, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Geosales(props) {\n  _s();\n\n  const [duration, setDuration] = useState(365);\n  const [d, setd] = useState([]); // d is used to store all the elements received from backend\n  //predefined options (settings) for bar charts\n\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true\n      }\n    }\n  };\n\n  function handleInput() {\n    console.log('Handle Input');\n    var x = document.getElementById('timeInput').value;\n    setDuration(x);\n  }\n\n  function handleResponse(response) {\n    console.log(response);\n    var dArray = [];\n\n    for (let i in response) {\n      console.log(response[i].data);\n      dArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chartTitle\",\n        children: response[i].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this));\n\n      if (response[i].name === 'bar') {\n        var chartData = {\n          labels: response[i].labels,\n          datasets: [{\n            label: 'Number of Units sold',\n            data: response[i].data,\n            backgroundColor: 'rgba(53, 162, 235, 0.9)'\n          }]\n        };\n        dArray.push( /*#__PURE__*/_jsxDEV(Bar, {\n          className: \"bar_chart\",\n          options: barOptions,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this));\n      } else if (response[i].name === 'pie') {\n        let chartData = {\n          labels: response[i].labels,\n          datasets: [{\n            data: response[i].data,\n            backgroundColor: ['#36a2eb', '#ff6384', '#ff9f40', '#ffcd56', '#4bc0c0', '#96f']\n          }]\n        };\n        dArray.push( /*#__PURE__*/_jsxDEV(Pie, {\n          className: \"pie_chart\",\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this));\n      } else if (response[i].name === 'doughnut') {\n        let chartData = {\n          labels: response[i].labels,\n          datasets: [{\n            data: response[i].data,\n            backgroundColor: ['#fc7e7a', '#61d0c6', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n        console.log('doughnut.......');\n        dArray.push( /*#__PURE__*/_jsxDEV(Doughnut, {\n          className: \"doughnut_chart\",\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this));\n      } //'bar_h' for horizontal bar chart\n      else if (response[i].name === \"bar_h\") {\n        let options = JSON.parse(JSON.stringify(barOptions));\n        options.indexAxis = 'y';\n        var chartData = {\n          labels: response[i].labels,\n          datasets: [{\n            label: 'Number of Units sold',\n            data: response[i].data,\n            backgroundColor: '#fc6103c1'\n          }]\n        };\n        dArray.push( /*#__PURE__*/_jsxDEV(Bar, {\n          className: \"bar_chart\",\n          options: options,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this));\n      }\n    }\n\n    setd(dArray);\n  }\n\n  useEffect(() => {\n    fetch('/geo', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(duration)\n    }).then(res => res.json()).then(data => {\n      handleResponse(data);\n    });\n  }, [duration]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), d]\n  }, void 0, true);\n}\n\n_s(Geosales, \"yI2/rK1fE0nlyBHAlTXCDugc8bU=\");\n\n_c = Geosales;\n\nfunction Header(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageHeader\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageTitle\",\n      children: \"Sales v Geo Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageHeaderInner\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"timeInput\",\n        id: \"timeInput\",\n        onChange: props.handleInput,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"365\",\n          children: \"Last 1 Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"180\",\n          children: \"Last 180 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"90\",\n          children: \"Last 90 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30\",\n          children: \"Last 30 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Header;\nexport default Geosales;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Geosales\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["useEffect","useState","Chart","Bar","Doughnut","Pie","Geosales","props","duration","setDuration","d","setd","barOptions","responsive","plugins","legend","position","title","display","handleInput","console","log","x","document","getElementById","value","handleResponse","response","dArray","i","data","push","name","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","JSON","parse","stringify","indexAxis","fetch","method","headers","body","then","res","json","Header"],"sources":["C:/Users/Adarsh/Desktop/carsgo/src/components/Geosales.js"],"sourcesContent":["import {useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport './header.css'\r\nimport {Bar, Doughnut, Pie} from 'react-chartjs-2'\r\n\r\nfunction Geosales(props){\r\n\r\n    const [duration, setDuration] = useState(365);\r\n    const [d, setd] = useState([]);      // d is used to store all the elements received from backend\r\n\r\n    //predefined options (settings) for bar charts\r\n    const barOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n            position: 'top',\r\n            },\r\n            title: {\r\n            display: true,\r\n            },\r\n        },\r\n    }\r\n\r\n    function handleInput(){\r\n        console.log('Handle Input')\r\n        var x = document.getElementById('timeInput').value;\r\n        setDuration(x)\r\n    }\r\n\r\n    function handleResponse(response){\r\n        console.log(response)\r\n        var dArray = []\r\n        for(let i in response){\r\n            console.log(response[i].data)\r\n\r\n            dArray.push(<div className=\"chartTitle\">{response[i].title}</div>)\r\n\r\n            if(response[i].name === 'bar'){\r\n                var chartData = {\r\n                    labels: response[i].labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Number of Units sold',\r\n                            data: response[i].data,\r\n                            backgroundColor: 'rgba(53, 162, 235, 0.9)'\r\n                        }\r\n                    ]\r\n                }\r\n                dArray.push(<Bar className=\"bar_chart\" options={barOptions} data={chartData}/>)\r\n            }\r\n            else if(response[i].name === 'pie'){\r\n                let chartData = {\r\n                    labels: response[i].labels,\r\n                    datasets: [\r\n                        {\r\n                            data: response[i].data,\r\n                            backgroundColor: [\r\n                                '#36a2eb', '#ff6384', '#ff9f40', '#ffcd56', '#4bc0c0', '#96f'\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n                dArray.push(<Pie className=\"pie_chart\" data={chartData} />)\r\n            }\r\n            else if(response[i].name === 'doughnut'){\r\n                let chartData = {\r\n                    labels: response[i].labels,\r\n                    datasets: [\r\n                        {\r\n                            data: response[i].data,\r\n                            backgroundColor: [\r\n                                '#fc7e7a', '#61d0c6',\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)',\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)',\r\n                            ],\r\n                            borderWidth: 1,\r\n                        }\r\n                    ]\r\n                }\r\n                console.log('doughnut.......')\r\n                dArray.push(<Doughnut className=\"doughnut_chart\" data={chartData}/>)\r\n            }\r\n            //'bar_h' for horizontal bar chart\r\n            else if(response[i].name === \"bar_h\"){\r\n                let options = JSON.parse(JSON.stringify(barOptions))\r\n                options.indexAxis = 'y'\r\n                var chartData = {\r\n                    labels: response[i].labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Number of Units sold',\r\n                            data: response[i].data,\r\n                            backgroundColor: '#fc6103c1'\r\n                        }\r\n                    ]\r\n                }\r\n                dArray.push(<Bar className=\"bar_chart\" options={options} data={chartData}/>)\r\n            }\r\n        }\r\n        setd(dArray)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        fetch('/geo',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(duration)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {handleResponse(data)})\r\n    }, [duration])\r\n\r\n    return (\r\n        <>\r\n        <Header handleInput={handleInput}/>\r\n        {d}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Header(props){\r\n\r\n    return (\r\n        <div className='pageHeader'>\r\n            <div className=\"pageTitle\">Sales v Geo Report</div>\r\n            <div className=\"pageHeaderInner\">\r\n                <select name=\"timeInput\" id=\"timeInput\" onChange={props.handleInput}>\r\n                    <option value=\"365\">Last 1 Year</option>\r\n                    <option value='180'>Last 180 Days</option>\r\n                    <option value='90'>Last 90 Days</option>\r\n                    <option value='30'>Last 30 Days</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Geosales;"],"mappings":"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"},"metadata":{},"sourceType":"module"}